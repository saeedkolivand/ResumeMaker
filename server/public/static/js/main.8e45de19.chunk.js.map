{"version":3,"sources":["components/UI/Button/Button.js","components/HomePage/HomePage.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/PersonalInfo/PersonalInfo.js","components/Skills/Skills.js","components/WorkExperience/WorkExperience.js","components/Education/Education.js","components/Contact/Contact.js","components/ResumePreview/ResumePreview.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","styleBtn","backgroundColor","bgColor","color","id","style","onClick","clicked","children","HomePage","state","transFlag","startClickHandler","event","a","console","log","setState","setTimeout","history","push","this","transform","opacity","Component","Input","onChange","changed","placeholder","autoComplete","autocomplete","type","name","Select","optionsJSX","options","map","value","index","array","key","className","PersonalInfo","outAnim","personalInfoData","createSelectItems","items","i","clickHandler","fullName","jobTitle","pathname","personalInfo","jobTitleInput","document","getElementById","fullNameInput","length","border","handleInputChange","target","sex","birthYear","aboutMe","city","renderCities","personalInfoStyle","Skills","skills","levels","currentSkill","skillText","level","handleAddNewSkillText","handleLevelSelector","e","handleAddSkill","oldSkills","focus","skillInput","handleDeleteSkill","splice","handleSubmit","location","skillContainerRenderer","element","skill","skillStyle","WorkExperience","experiences","yearList","years","monthList","currentExperience","companyName","fromMonth","fromYear","toMonth","toYear","handleJobTitle","handleCompanyName","handleFromMonth","handleFromYear","handleToMonth","handleToYear","handleAddExperience","oldExperiences","handleDeleteExperience","experienceContainerRenderer","experience","experienceStyle","Education","education","degreeList","currentEducation","degree","major","university","month","year","handleDegree","handleMajor","handleUniversity","handleMonth","handleYear","handleAddEducation","oldEducation","degreeSelector","majorInput","handleDeleteEducation","educationContainerRenderer","educationStyle","Contact","currentContactInfo","phoneNumber","email","linkedIn","github","handleAddPhoneNumber","handleAddEmail","handleAddLinkedIn","handleAddGithub","contact","contactInfo","phoneNumberInput","emailInput","contactStyle","ResumePreview","handleDownloadButton","axios","method","responseType","then","response","file","Blob","data","fileURL","URL","createObjectURL","window","open","catch","error","renderEducation","val","renderSkills","renderWorkExperience","renderContact","post","App","path","component","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e45de19.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst Button = props => {\n    const styleBtn = {\n        backgroundColor: props.bgColor,\n        color: props.color\n    };\n\n    \n\n    return (\n        <button id={props.id ? props.id : 'button'} style={styleBtn} onClick={props.clicked}>\n            {props.children}\n        </button>\n    )\n};\n\nexport default Button;","import React, { Component } from 'react';\nimport './HomePage.css';\nimport Button from \"../UI/Button/Button\";\n\n\nclass HomePage extends Component {\n    state = {\n        transFlag: false\n    };\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        const startClickHandler = async (event) => {\n            console.log('startClickHandler', this.state);\n            await this.setState({\n                transFlag: true\n            }\n            );\n            console.log('startClickHandler', this.state);\n            setTimeout(() => {\n                this.props.history.push(\"/personalinfo\");\n\n            }, 200);\n        };\n        return (\n            <div id=\"HomePage\" style={this.state.transFlag ? { transform: \"translateX(500px)\", opacity: 0 } : null}>\n                <p>رزومه خودتو چند ثانیه ای بساز</p>\n                <Button bgColor=\"#0099ff\" color=\"white\" clicked={startClickHandler}>\n                    شروع\n                </Button>\n            </div>\n        )\n    }\n\n}\n\n\nexport default HomePage;","import React from 'react';\nimport './Input.css';\n\nconst Input = props => {\n    return (\n        <input \n            id={props.id}\n            onChange={props.changed} \n            placeholder={props.placeholder} \n            autoComplete={props.autocomplete}\n            type={props.type} \n            name={props.name} />\n    );\n};\n\nexport default Input;\n","import React from 'react';\nimport './Select.css';\n\nconst Select = props => {\n    const optionsJSX = props.options.map(((value, index, array) => {\n        return <option key={index} value={value}>{value}</option>\n    } ));\n    return (\n        <select className=\"optionClass\" id={props.id} onChange={props.changed}>\n            <option >-</option>\n            {optionsJSX}\n        </select>\n    );\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport \"./PersonalInfo.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport Select from \"../UI/Select/Select\";\n\nclass PersonalInfo extends Component {\n\n    state = {\n        outAnim: false\n    };\n    personalInfoData = {};\n\n    createSelectItems = () => {\n        let items = [];\n        for (let i = 1398; i >= 1350; i--) {\n            items.push(i);\n        }\n        return items;\n    };\n\n\n    clickHandler = async () => {\n        if (this.personalInfoData.fullName && this.personalInfoData.jobTitle) {\n            this.setState({\n                outAnim: true\n            }, () => setTimeout(() => {\n                this.props.history.push({\n                    pathname: '/skills',\n                    state: {\n                        personalInfo: this.personalInfoData\n                    }\n                });\n            }, 200));\n        } else {\n            const jobTitleInput = document.getElementById('jobTitle');\n            const fullNameInput = document.getElementById('fullName');\n            const borderStyle = \"1px solid red\";\n            if (!jobTitleInput.value.length) {\n                jobTitleInput.style.border = borderStyle;\n            }\n            if (!fullNameInput.value.length) {\n                fullNameInput.style.border = borderStyle;\n            }\n        }\n    };\n\n    handleInputChange = (event) => {\n        if (event.target.id === \"fullName\") {\n            this.personalInfoData.fullName = event.target.value;\n        } else if (event.target.id === \"jobTitle\") {\n            this.personalInfoData.jobTitle = event.target.value;\n        } else if (event.target.id === \"sex\") {\n            this.personalInfoData.sex = event.target.value;\n        } else if (event.target.id === \"birthYear\") {\n            this.personalInfoData.birthYear = event.target.value;\n        } else if (event.target.id === \"aboutMe\") {\n            this.personalInfoData.aboutMe = event.target.value;\n        } else if (event.target.id === \"city\") {\n            this.personalInfoData.city = event.target.value;\n        }\n\n        \n    };\n\n    \n\n\nrenderCities = () => [\n    'آذربایجان شرقی', 'آذربایجان غربی', 'اردبیل', 'اصفهان',\n    'البرز', 'ایلام', 'بوشهر', 'تهران', 'چهارمحال و بختیاری', 'خراسان جنوبی', 'خراسان رضوی', 'خراسان شمالی', 'خوزستان',\n    'زنجان', 'سمنان', 'سیستان و بلوچستان', 'فارس', 'قزوین', 'قم', 'کردستان', 'کرمان', 'کرمانشاه',\n    'کهگیلویه وبویراحمد', 'گلستان', 'گیلان', 'لرستان', 'مازندران', 'مرکزی', 'هرمزگان', 'همدان', 'یزد'\n];\n\nrender() {\n    let personalInfoStyle = {};\n    if (this.state.outAnim) {\n        personalInfoStyle = {\n            transform: 'translateX(500px)',\n            opacity: 1\n        }\n    }\n\n    return (\n        <div id=\"PersonalInfo\" style={personalInfoStyle}>\n            <p>اطلاعات فردی خودتونو وارد کنید</p>\n            <div id=\"form-wrapper\">\n                <Input id=\"fullName\" changed={this.handleInputChange} placeholder=\"نام و نام خانوادگی\"\n                    autoComplete=\"off\" type=\"text\" name=\"fullName\" /><br />\n                <Input id=\"jobTitle\" changed={this.handleInputChange} autoComplete=\"off\" placeholder=\"عنوان شغلی\"\n                    type=\"text\" /><br />\n                <label>جنسیت: </label>\n                <Select id=\"sex\" changed={this.handleInputChange}\n                    options={['مرد', 'زن']} /><br />\n                <label>استان سکونت:</label>\n                <Select id=\"city\" changed={this.handleInputChange}\n                    options={this.renderCities()} /><br />\n                <label id=\"yearLabel\">سال تولد: </label>\n                <Select id=\"birthYear\" changed={this.handleInputChange} options={this.createSelectItems()} /><br />\n                <textarea id=\"aboutMe\" onChange={this.handleInputChange} placeholder=\"درباره من\" />\n            </div>\n            <Button bgColor=\"#0099ff\" color=\"white\" clicked={this.clickHandler}>\n                مرحله بعد\n                </Button>\n        </div>\n    );\n}\n}\n\nexport default PersonalInfo;\n","import React, { Component } from 'react';\nimport './Skills.css';\nimport Input from \"../UI/Input/Input\";\nimport Button from \"../UI/Button/Button\";\nimport Select from '../UI/Select/Select';\n\nclass Skills extends Component {\n\n    state = {\n        skills: [],\n        outAnim: false\n    };\n\n    levels = [\n        'تازه کار',\n        'نیمه ماهر',\n        'ماهر',\n        'متخصص'\n    ];\n\n    currentSkill = { skillText: '', level: '' };\n    handleAddNewSkillText = (event) => {\n        this.currentSkill.skillText = event.target.value;\n        //console.log(this.currentSkill);\n    };\n\n\n    handleLevelSelector = (e) => {\n        this.currentSkill.level = e.target.value;\n        //console.log(this.currentSkill);\n\n    };\n\n    handleAddSkill = (event) => {\n        let oldSkills = [...this.state.skills];\n        if (this.currentSkill.level.length && this.currentSkill.skillText.length) {\n            oldSkills.push({ skillText: this.currentSkill.skillText, level: this.currentSkill.level });\n            this.setState({ skills: oldSkills });\n            this.currentSkill = { level: '', skillText: '' };\n            document.getElementById('skillInput').value = '';\n            document.getElementById('skillInput').focus();\n            document.getElementById('levelSelector').value = '-';\n        } else {\n            const skillInput = document.getElementById('skillInput');\n            const borderStyle = \"1px solid red\";\n            if (!skillInput.value.length) {\n                skillInput.style.border = borderStyle;\n            }\n        }\n    };\n\n    handleDeleteSkill = (index) => {\n\n        let oldSkills = [...this.state.skills];\n\n        oldSkills.splice(index, 1);\n        this.setState({\n            skills: [...oldSkills]\n        })\n    };\n\n    handleSubmit = () => {\n\n        this.setState({\n            outAnim: true\n        }, () => setTimeout(() => {\n            this.props.history.push({\n                pathname: '/workexperience',\n                state: {\n                    ...this.props.location.state,\n                    skills: this.state.skills\n                }\n            });\n        }, 300));\n\n    };\n\n    skillContainerRenderer = () => {\n        let element = null;\n        if (this.state.skills.length) {\n            element = this.state.skills.map((skill, i) => {\n                return (\n                    <div className=\"addedSkillBox\" key={i}>\n                        <div className=\"addedSkillText\"><br/>\n                            {skill.skillText} <br/>\n                            {skill.level}\n                        </div>\n                        <div className=\"deleteIcon\" onClick={() => this.handleDeleteSkill(i)} />\n                    </div>\n                );\n            })\n\n        }\n        return element;\n    };\n\n    render() {\n        let skillStyle= {};\n        if (this.state.outAnim) {\n            skillStyle = {\n                transform: 'translateX(500px)',\n                opacity: 0\n            }\n        }\n        return (\n            <div id=\"skills\" style={skillStyle}>\n                <p>مهارت ها</p>\n                <div id=\"formWrapper\">\n                    <Input id=\"skillInput\" changed={this.handleAddNewSkillText} value={this.state.skills}\n                        placeholder=\"مهارت خود را وارد کنید\" autocomplete=\"off\" type=\"text\" name=\"skills\" />\n                    <Select id=\"levelSelector\" changed={this.handleLevelSelector} options={this.levels} />\n                    <Button clicked={this.handleAddSkill} bgColor=\"#ff6666\" color=\"white\">+</Button><br/>\n                    {this.skillContainerRenderer()}\n                </div>\n                <Button bgColor=\"#0099ff\" color=\"white\" clicked={this.handleSubmit}>\n                    مرحله بعد\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default Skills;","import React, { Component } from 'react';\nimport './WorkExperience.css';\nimport Input from \"../UI/Input/Input\";\nimport Button from \"../UI/Button/Button\";\nimport Select from '../UI/Select/Select';\n\nclass WorkExperience extends Component {\n\n    state = {\n        experiences: [],\n        outAnim: false\n    };\n\n    componentDidMount() {\n        console.log(this.props.location);\n\n    }\n\n    yearList = () => {\n        let years = [];\n        for (let i = 1398; i >= 1350; i--) {\n            years.push(i);\n        }\n        return years;\n    };\n\n    monthList = () => [\n        'فروردین', 'اردیبهشت', 'خرداد',\n        'تیر', 'مرداد', 'شهریور',\n        'مهر', 'آبان', 'آذر',\n        'دی', 'بهمن', 'اسفند'\n    ];\n\n    currentExperience = {\n        jobTitle: '',\n        companyName: '',\n        fromMonth: '',\n        fromYear: '',\n        toMonth: '',\n        toYear: ''\n    };\n\n    handleJobTitle = (event) => {\n        this.currentExperience.jobTitle = event.target.value;\n    };\n\n    handleCompanyName = (event) => {\n        this.currentExperience.companyName = event.target.value;\n    };\n\n    handleFromMonth = (event) => {\n        this.currentExperience.fromMonth = event.target.value;\n    };\n\n    handleFromYear = (event) => {\n        this.currentExperience.fromYear = event.target.value;\n    };\n\n    handleToMonth = (event) => {\n        this.currentExperience.toMonth = event.target.value;\n    };\n\n    handleToYear = (event) => {\n        this.currentExperience.toYear = event.target.value;\n    };\n\n    handleAddExperience = () => {\n        let oldExperiences = [...this.state.experiences];\n        oldExperiences.push({\n            jobTitle: this.currentExperience.jobTitle,\n            companyName: this.currentExperience.companyName,\n            fromYear: this.currentExperience.fromYear,\n            fromMonth: this.currentExperience.fromMonth,\n            toYear: this.currentExperience.toYear,\n            toMonth: this.currentExperience.toMonth\n        });\n        this.setState({ experiences: oldExperiences });\n        this.currentExperience = {\n            jobTitle: '',\n            companyName: '',\n            fromMonth: '',\n            fromYear: '',\n            toMonth: '',\n            toYear: ''\n        };\n        document.getElementById('jobTitleInput').value = '';\n        document.getElementById('jobTitleInput').focus();\n        document.getElementById('companyNameInput').value = '';\n        document.getElementById('companyNameInput').focus();\n        document.getElementById('fromMonthSelector').value = '-';\n        document.getElementById('fromYearSelector').value = '-';\n        document.getElementById('toMonthSelector').value = '-';\n        document.getElementById('toYearSelector').value = '-';\n    };\n\n    handleDeleteExperience = (index) => {\n\n        let oldExperiences = [...this.state.experiences];\n\n        oldExperiences.splice(index, 1);\n        this.setState({\n            experiences: [...oldExperiences]\n        })\n    };\n\n    handleSubmit = () => {\n        this.setState({\n            outAnim: true\n        }, () => setTimeout(() => {\n            this.props.history.push({\n                pathname: '/education',\n                state: {\n                    ...this.props.location.state,\n                    experiences: this.state.experiences\n                }\n            });\n        }, 300));\n    };\n\n    experienceContainerRenderer = () => {\n        let element = null;\n        if (this.state.experiences.length) {\n            element = this.state.experiences.map((experience, i) => {\n                return (\n                    <div className=\"addedExperienceBox\" key={i}>\n                        <p className=\"addedExperienceBoxOutputs\"><label> سمت:</label>{experience.jobTitle}</p>\n                        <p className=\"addedExperienceBoxOutputs\"><label> نام شرکت:</label>{experience.companyName}</p><br />\n                        <p className=\"addedExperienceBoxOutputs\"><label> از:</label>{experience.fromMonth} {experience.fromYear}</p>\n                        <p className=\"addedExperienceBoxOutputs\"><label> تا:</label>{experience.toMonth} {experience.toYear}</p>\n                        <div className=\"deleteIcon\" onClick={() => this.handleDeleteExperience(i)} />\n                    </div>\n                );\n            })\n\n        }\n        return element;\n    };\n\n    render() {\n        let experienceStyle = {};\n        if (this.state.outAnim) {\n            experienceStyle = {\n                transform: 'translateX(500px)',\n                opacity: 0\n            }\n        }\n        return (\n            <div id=\"workExperience\" style={experienceStyle}>\n                <p>سوابق شغلی</p>\n                <div id=\"formWrapper\">\n                    <Input id=\"jobTitleInput\" changed={this.handleJobTitle} value={this.state.experiences}\n                        placeholder=\"عنوان شغلی\" autocomplete=\"off\" type=\"text\" name=\"jobTitle\" />\n                    <Input id=\"companyNameInput\" changed={this.handleCompanyName} value={this.state.experiences}\n                        placeholder=\"نام شرکت\" autocomplete=\"off\" type=\"text\" name=\"companyName\" /> <br />\n                    <label>سال شروع</label><Select id=\"fromYearSelector\" changed={this.handleFromYear}\n                        options={this.yearList()} />\n                    <label>ماه شروع</label><Select id=\"fromMonthSelector\" changed={this.handleFromMonth}\n                        options={this.monthList()} />\n                    <label>سال پایان</label><Select id=\"toYearSelector\" changed={this.handleToYear}\n                        options={this.yearList()} />\n                    <label>ماه پایان</label><Select id=\"toMonthSelector\" changed={this.handleToMonth}\n                        options={this.monthList()} />\n                    <Button clicked={this.handleAddExperience} bgColor=\"#ff6666\" color=\"white\">+</Button><br />\n                    {this.experienceContainerRenderer()}\n                </div>\n                <Button bgColor=\"#0099ff\" color=\"white\" clicked={this.handleSubmit}>\n                    مرحله بعد\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default WorkExperience;","import React, { Component } from 'react';\nimport './Education.css';\nimport Input from \"../UI/Input/Input\";\nimport Button from \"../UI/Button/Button\";\nimport Select from '../UI/Select/Select';\n\nclass Education extends Component {\n\n    state = {\n        education: [],\n        outAnim: false\n    };\n\n    componentDidMount() {\n        console.log(this.props.location);\n\n    }\n\n    degreeList = () => [\n        'دیپلم',\n        'کاردانی',\n        'کارشناسی',\n        'کارشناسی ارشد',\n        'دکتری'\n    ];\n\n    monthList = () => [\n        'فروردین',\n        'اردیبهشت',\n        'خرداد',\n        'تیر',\n        'مرداد',\n        'شهریور',\n        'مهر',\n        'آبان',\n        'آذر',\n        'دی',\n        'بهمن',\n        'اسفند'\n    ];\n\n    yearList = () => {\n        let years = [];\n        for (let i = 1398; i >= 1350; i--) {\n            years.push(i);\n        }\n        return years;\n    };\n\n    currentEducation = { degree: '', major:'', university: '', month: '', year: '' };\n\n    handleDegree = (event) => {\n        this.currentEducation.degree = event.target.value;\n    };\n\n    handleMajor = (event) => {\n        this.currentEducation.major = event.target.value;\n    };\n\n    handleUniversity = (event) => {\n        this.currentEducation.university = event.target.value;\n    };\n\n    handleMonth = (event) => {\n        this.currentEducation.month = event.target.value;\n    };\n\n    handleYear = (event) => {\n        this.currentEducation.year = event.target.value;\n    };\n\n    handleAddEducation = () => {\n        let oldEducation = [...this.state.education];\n        if (this.currentEducation.degree.length && this.currentEducation.major.length) {\n            oldEducation.push({\n                degree: this.currentEducation.degree,\n                major: this.currentEducation.major,\n                university: this.currentEducation.university,\n                month: this.currentEducation.month,\n                year: this.currentEducation.year\n            });\n            this.setState({ education: oldEducation });\n            this.currentEducation = {\n                degree: '',\n                major:'',\n                university: '',\n                fromMonth: '',\n                fromYear:''\n            };\n            document.getElementById('degreeSelector').value = '';\n            document.getElementById('majorInput').value = '';\n            document.getElementById('degreeSelector').focus();\n            document.getElementById('universityInput').value = '';\n            document.getElementById('monthSelector').value = '-';\n            document.getElementById('yearSelector').value = '-';\n        } else {\n            const degreeSelector = document.getElementById('degreeSelector');\n            const majorInput = document.getElementById('majorInput');\n            const borderStyle = \"1px solid red\";\n            if (!degreeSelector.value.length && !majorInput.value.length) {\n                degreeSelector.style.border = borderStyle;\n                majorInput.style.border = borderStyle;\n            }\n        }\n    };\n\n    handleDeleteEducation = (index) => {\n\n        let oldEducation = [...this.state.education];\n\n        oldEducation.splice(index, 1);\n        this.setState({\n            education: [...oldEducation]\n        })\n    };\n\n    handleSubmit = () => {\n        this.setState({\n            outAnim: true\n        }, () => setTimeout(() => {\n            this.props.history.push({\n                pathname: '/contact',\n                state: {\n                    ...this.props.location.state,\n                    education: this.state.education\n                }\n            });\n        }, 300));\n    };\n\n    educationContainerRenderer = () => {\n        let element = null;\n        if (this.state.education.length) {\n            element = this.state.education.map((education, i) => {\n                return (\n                    <div className=\"addedEducationBox\" key={i}>\n                        <p className=\"addedEducationBoxOutputs\"><label> مدرک:</label>{education.degree}</p>\n                        <p className=\"addedEducationBoxOutputs\"><label> رشته:</label>{education.major}</p><br/>\n                        <p className=\"addedEducationBoxOutputs\"><label> نام محل اخذ مدرک:</label>{education.university}</p>\n                        <p className=\"addedEducationBoxOutputs\"><label> تاریخ اخذ مدرک:</label>{education.month} - {education.year}</p>\n                        <div className=\"deleteIcon\" onClick={() => this.handleDeleteEducation(i)} />\n                    </div>\n                );\n            })\n\n        }\n        return element;\n    };\n\n    render() {\n        let educationStyle = {};\n        if (this.state.outAnim) {\n            educationStyle = {\n                transform: 'translateX(500px)',\n                opacity: 0\n            }\n        }\n        return (\n            <div id=\"education\" style={educationStyle}>\n                <p>سوابق تحصیلی</p>\n                <div id=\"formWrapper\">\n                    <label>مدرک:</label>\n                    <Select \n                        id=\"degreeSelector\" \n                        changed={this.handleDegree} \n                        options={this.degreeList()} />\n                    <label>رشته:</label>\n                    <Input \n                        id=\"majorInput\" \n                        changed={this.handleMajor} \n                        value={this.state.education}\n                        placeholder=\"نام رشته تحصیلی\" \n                        autocomplete=\"off\" \n                        type=\"text\" \n                        name=\"majorInput\" /><br />\n                    <label>محل تحصیل:</label><Input id=\"universityInput\" changed={this.handleUniversity} value={this.state.education}\n                                                placeholder=\"نام محل تحصیل\" autocomplete=\"off\" type=\"text\" name=\"universityInput\" /><br />\n                    <label>ماه اخذ مدرک:</label><Select id=\"monthSelector\" changed={this.handleMonth} options={this.monthList()} />\n                    <label>سال اخذ مدرک:</label><Select id=\"yearSelector\" changed={this.handleYear} options={this.yearList()} />\n                    <Button \n                        id=\"addEducationBtn\"\n                        clicked={this.handleAddEducation} \n                        bgColor=\"#ff6666\" \n                        color=\"white\">+</Button><br/>\n                    {this.educationContainerRenderer()}\n                </div>\n                <Button bgColor=\"#0099ff\" color=\"white\" clicked={this.handleSubmit}>\n                    مرحله بعد\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default Education;","import React, { Component } from 'react';\nimport './Contact.css';\nimport Input from \"../UI/Input/Input\";\nimport Button from \"../UI/Button/Button\";\n\nclass Contact extends Component {\n\n    state = {\n        outAnim: false\n    };\n\n    componentDidMount() {\n        console.log(this.props.location);\n\n    }\n\n    currentContactInfo = { phoneNumber: '', email: '', linkedIn:'', github: '' };\n    handleAddPhoneNumber = (event) => {\n        this.currentContactInfo.phoneNumber = event.target.value;\n    };\n\n    handleAddEmail = (event) => {\n        this.currentContactInfo.email = event.target.value;\n    };\n\n    handleAddLinkedIn = (event) => {\n        this.currentContactInfo.linkedIn = event.target.value;\n    };\n\n    handleAddGithub = (event) => {\n        this.currentContactInfo.github = event.target.value;\n    };\n\n    handleSubmit = () => {\n        const contact = this.currentContactInfo;\n        if (this.currentContactInfo.phoneNumber.length && this.currentContactInfo.email.length) {\n            this.setState({\n                outAnim: true\n            }, () => setTimeout(() => {\n                this.props.history.push({\n                    pathname: '/resumePreview',\n                    state: {\n                        ...this.props.location.state,\n                        contactInfo: contact\n                    }\n                });\n            }, 300));\n        this.currentContactInfo = {phoneNumber: null, email: '', linkedIn: '', github: ''};\n        document.getElementById('phoneNumberInput').value = '';\n        document.getElementById('phoneNumberInput').focus();\n        document.getElementById('emailInput').value = '';\n        document.getElementById('emailInput').focus();\n        } else {\n            const phoneNumberInput = document.getElementById('phoneNumberInput');\n            const emailInput = document.getElementById('emailInput');\n            const borderStyle = \"1px solid red\";\n            if (!phoneNumberInput.value.length && !emailInput.value.length) {\n                phoneNumberInput.style.border = borderStyle;\n                emailInput.style.border = borderStyle;\n            }else if (!emailInput.value.length){\n                emailInput.style.border = borderStyle;\n            }else if(!phoneNumberInput.value.length){\n                phoneNumberInput.style.border = borderStyle;\n            }\n        }\n    };\n\n    render() {\n        let contactStyle = {};\n        if (this.state.outAnim) {\n            contactStyle = {\n                transform: 'translateX(500px)',\n                opacity: 0\n            }\n        }\n        return (\n            <div id=\"contact\" style={contactStyle}>\n                <p>اطلاعات تماس</p>\n                <div id=\"formWrapper\">\n                    <Input id=\"phoneNumberInput\" changed={this.handleAddPhoneNumber} value={this.state.contactInfo}\n                       placeholder=\"شماره همراه\" autocomplete=\"on\" type=\"number\" name=\"phoneNumber\" /> <br />\n                    <Input id=\"emailInput\" changed={this.handleAddEmail} value={this.state.contactInfo}\n                       placeholder=\"ایمیل\" autocomplete=\"on\" type=\"email\" name=\"Email\" /> <br />\n                    <Input id=\"linkedInInput\" changed={this.handleAddLinkedIn} value={this.state.contactInfo}\n                       placeholder=\"آدرس لینکدین\" autocomplete=\"off\" type=\"link\" name=\"linkedIn\" /> <br />\n                    <Input id=\"githubInput\" changed={this.handleAddGithub} value={this.state.contactInfo}\n                       placeholder=\"آدرس گیت هاب\" autocomplete=\"off\" type=\"link\" name=\"github\" />\n                </div>\n                <Button bgColor=\"#0099ff\" color=\"white\" clicked={this.handleSubmit}>\n                    مرحله بعد\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport axios from 'axios';\n//import { saveAs } from \"file-saver\";\n\nimport Button from '../UI/Button/Button';\n\nimport './ResumePreview.css';\n\nclass ResumePreview extends Component {\n    state = {};\n\n    handleDownloadButton = (e) => {\n        axios(`/getPdf`, {\n            method: \"GET\",\n            responseType: \"blob\"\n        })\n            .then(response => {\n                const file = new Blob([response.data], {\n                    type: \"application/pdf\"\n                });\n                const fileURL = URL.createObjectURL(file);\n                window.open(fileURL);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    componentDidMount() {\n        \n        axios.post('/create-pdf', this.props.location);\n    }\n\n\n    renderEducation = () => {\n\n        const items = this.props.location.state.education.map((val, i) => {\n            return (\n                <li key={i}>\n                    <h4>{val.degree} {val.major}</h4>\n                    <h5>{val.university}</h5>\n                    <h6>{val.month}/{val.year}</h6>\n                </li>\n            )\n        });\n        return items;\n    }\n\n    renderSkills = () => {\n        const items = this.props.location.state.skills.map((val, i) => {\n            return (\n                <li key={i}>\n                    <h4>{val.skillText}</h4>\n                    <h5>{val.level}</h5>\n                </li>\n            )\n        });\n        return items;\n    }\n\n    renderWorkExperience = () => {\n        const items = this.props.location.state.experiences.map((val, i) => {\n            return (\n                <div key={i}>\n                    <h2>{val.jobTitle}</h2>\n                    <h4>{val.toMonth}/{val.toYear} - {val.fromMonth}/{val.fromYear}</h4>\n                    <h3>{val.companyName}</h3>\n                </div>\n            )\n        });\n        return items;\n    }\n\n\n    renderContact = () => {\n        const contact = this.props.location.state.contactInfo;\n        return (\n            <div id=\"contacts\">\n                <h3>{contact.email}</h3>\n                <h3>{contact.phoneNumber}</h3>\n                <h4>{contact.github}</h4>\n                <h4>{contact.linkedIn}</h4>\n            </div>\n        )\n    }\n\n\n\n    render() {\n        return (\n            <div id=\"resumePreview\">\n                <div id=\"header\" >\n                    <h1>{this.props.location.state.personalInfo.fullName}</h1>\n                    <h2>{this.props.location.state.personalInfo.jobTitle}</h2>\n                    <Button clicked={this.handleDownloadButton}>دریافت فایل</Button>\n                </div>\n                <div id=\"headerDivider\"></div>\n                <div id=\"rightPanel\">\n                    <div id=\"educationPanel\">\n                        <h3>تحصیلات</h3>\n                        <div className=\"headerDivider\"></div>\n                        <ul>\n                            {this.renderEducation()}\n                        </ul>\n                    </div>\n                    <div id=\"skillsPanel\">\n                        <h3>مهارت ها</h3>\n                        <div className=\"headerDivider\"></div>\n                        <ul>\n                            {this.renderSkills()}\n                        </ul>\n                    </div>\n\n\n                    <div id=\"contactPanel\">\n                        <h3>راه های ارتباطی</h3>\n                        <div className=\"headerDivider\"></div>\n                        {this.renderContact()}\n                    </div>\n                </div>\n                <div id=\"panelsDivider\"></div>\n                <div id=\"leftPanel\" >\n                    <div id=\"abouteMe\" >\n                        <h3>درباره من</h3>\n                        <h4>{this.props.location.state.personalInfo.city} - {this.props.location.state.personalInfo.sex} - {this.props.location.state.personalInfo.birthYear}</h4>\n                        <div className=\"headerDivider\"></div>\n                        <p>{this.props.location.state.personalInfo.aboutMe}</p>\n                    </div>\n                    <div id=\"workExperienceContainer\" >\n                        <h3>سابقه کاری</h3>\n                        <div className=\"headerDivider\" ></div>\n                        <div id=\"experiences\" >\n                            {this.renderWorkExperience()}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResumePreview;","import React from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PersonalInfo from \"./components/PersonalInfo/PersonalInfo\";\nimport Skills from \"./components/Skills/Skills\";\nimport WorkExperience from './components/WorkExperience/WorkExperience';\nimport Education from './components/Education/Education';\nimport Contact from './components/Contact/Contact';\nimport ResumePreview from './components/ResumePreview/ResumePreview';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Route path=\"/\" component={HomePage} exact/>\n            <Route path=\"/personalinfo\" component={PersonalInfo} />\n            <Route path=\"/skills\" component={Skills} />\n            <Route path=\"/workexperience\" component={WorkExperience} />\n            <Route path=\"/education\" component={Education} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/resumePreview\" component={ResumePreview} />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}